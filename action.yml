name: "Build"
description: "Docker Build"

inputs:
  version:
    description: "Version"
    required: true
  username:
    description: "Registry Username"
    required: true
  password:
    description: "Registry Password"
    required: true
  registry:
    description: "Registry Hostname"
    required: false
    default: "ghcr.io"
  stack-file:
    description: "Stack File"
    required: false
    default: "docker-compose-swarm.yaml"

runs:
  using: "composite"
  steps:
    - name: "Debug"
      shell: bash
      run: |
        echo inputs.version: '${{ inputs.version }}'
        echo inputs.username: '${{ inputs.username }}'
        echo inputs.password: '${{ inputs.password }}'
        echo github.ref_name: '${{ github.ref_name }}'

    - name: "TESTING Docker Tags"
      id: dtags
      uses: cssnr/docker-tags-action@v1
      with:
        tags: ${{ inputs.version }}
        images: "ghcr.io/${{ github.repository }}"

    - name: "TESTING Debug Docker Tags"
      shell: bash
      run: |
        echo inputs.version: '${{ inputs.version }}'
        echo github.ref_name: '${{ github.ref_name }}'
        echo -e "tags:\n${{ steps.dtags.outputs.tags }}"
        echo -e "labels:\n${{ steps.dtags.outputs.labels }}"

    - name: "Docker Login"
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: "Setup Buildx"
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: "Bake and Push"
      uses: docker/bake-action@v6
      with:
        files: ${{ inputs.stack-file }}
        source: .
        push: true
        targets: app,nginx
        set: |
          app.tags=ghcr.io/${{ github.repository }}-app:${{ inputs.version }}
          nginx.tags=ghcr.io/${{ github.repository }}-nginx:${{ inputs.version }}
          *.platform=linux/amd64,linux/arm64
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
